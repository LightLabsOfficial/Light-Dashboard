<body class="bg-[#10181e] text-white font-sans relative overflow-hidden">
  <div class="absolute inset-0 -z-10">
    <canvas id="animated-bg" class="w-full h-full"></canvas>
  </div>
  <%- include('./components/wrapper') %>
<!-- Main Content -->
<main class="flex-grow container mx-auto px-4 py-8" x-data="store()">
  <div class="flex justify-between items-center w-full mx-auto pb-4">
      <!-- Welcome text and subtext on the left -->
      <div class="flex flex-col">
          <h1 class="text-xl text-white font-semibold mb-0.5" style="font-family: 'Cabin';">Store</h1>
          <p class="text-gray-400 text-md">Use your Coins to upgrade your servers by purchasing resources!</p>
      </div>

      <!-- Breadcrumbs on the right -->
      <nav aria-label="Breadcrumb" class="inline-flex py-2 px-4 rounded-xl bg-white/5 transition-colors duration-200">
          <ol role="list" class="flex items-center space-x-2">
              <li>
                  <a href="#_" class="text-sm flex items-center gap-2 text-zinc-400 hover:text-zinc-200 transition-colors duration-200" aria-current="false">
                      <svg
                          aria-hidden="true"
                          xmlns="http://www.w3.org/2000/svg"
                          viewBox="0 0 24 24"
                          fill="none"
                          stroke="currentColor"
                          stroke-width="2"
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          class="icon icon-tabler size-4 icons-tabler-outline icon-tabler-home"
                      >
                          <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                          <path d="M5 12l-2 0l9 -9l9 9l-2 0"></path>
                          <path d="M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-7"></path>
                          <path d="M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v6"></path>
                      </svg>
                      <span>Home</span>
                  </a>
              </li>
              <li class="flex items-center">
                  <svg
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      class="icon icon-tabler icons-tabler-outline icon-tabler-chevron-right size-4 text-zinc-400"
                  >
                      <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                      <path d="M9 6l6 6l-6 6"></path>
                  </svg>
              </li>
              <li>
                  <a href="#_" class="text-sm flex items-center gap-2 font-medium text-white/80 hover:text-white transition-colors duration-200" aria-current="page">
                      Store
                  </a>
              </li>
          </ol>
      </nav>
  </div>

  <!-- Store Content -->
  <div>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8 mt-4">
          <!-- RAM Card -->
          <div class="bg-white/5 rounded-2xl p-8">
              <h3 class="text-xl text-white font-semibold mb-4">RAM</h3>
              <p class="text-gray-400 mb-4">Upgrade your server's memory</p>
              <div class="flex justify-between items-center mb-4">
                  <span class="text-lg text-white font-medium"><%= resourceCosts.ram %> Coins</span>
                  <div class="flex items-center">
                      <button @click="decrementRAM()" class="bg-white/5 text-white px-2 py-1 rounded-l">-</button>
                      <input x-model.number="ram" type="number" min="1" class="bg-[#1a1f2a]/50 text-white w-16 text-center px-2 py-1 border-t border-b border-white/5">
                      <button @click="incrementRAM()" class="bg-white/5 text-white px-2 py-1 rounded-r">+</button>
                  </div>
              </div>
              <button @click="buyRAM()" class="w-full bg-orange-600 font-medium text-white py-2 rounded-full hover:bg-orange-700 transition">
                  Buy RAM
              </button>
          </div>

          <!-- Disk Card -->
          <div class="bg-white/5 rounded-2xl p-8">
              <h3 class="text-xl text-white font-semibold mb-4">Disk</h3>
              <p class="text-gray-400 mb-4">Expand your storage capacity</p>
              <div class="flex justify-between items-center mb-4">
                  <span class="text-lg text-white font-medium"><%= resourceCosts.disk %> Coins</span>
                  <div class="flex items-center">
                      <button @click="decrementDisk()" class="bg-white/5 text-white px-2 py-1 rounded-l">-</button>
                      <input x-model.number="disk" type="number" min="1" class="bg-[#1a1f2a]/50 text-white w-16 text-center px-2 py-1 border-t border-b border-white/5">
                      <button @click="incrementDisk()" class="bg-white/5 text-white px-2 py-1 rounded-r">+</button>
                  </div>
              </div>
              <button @click="buyDisk()" class="w-full bg-orange-600 font-medium text-white py-2 rounded-full hover:bg-orange-700 transition">
                  Buy Disk
              </button>
          </div>

          <!-- CPU Card -->
          <div class="bg-white/5 rounded-2xl p-8">
              <h3 class="text-xl text-white font-semibold mb-4">CPU</h3>
              <p class="text-gray-400 mb-4">Boost your processing power</p>
              <div class="flex justify-between items-center mb-4">
                  <span class="text-lg text-white font-medium"><%= resourceCosts.cpu %> Coins</span>
                  <div class="flex items-center">
                      <button @click="decrementCPU()" class="bg-white/5 text-white px-2 py-1 rounded-l">-</button>
                      <input x-model.number="cpu" type="number" min="1" class="bg-[#1a1f2a]/50 text-white w-16 text-center px-2 py-1 border-t border-b border-white/5">
                      <button @click="incrementCPU()" class="bg-white/5 text-white px-2 py-1 rounded-r">+</button>
                  </div>
              </div>
              <button @click="buyCPU()" class="w-full bg-orange-600 font-medium text-white py-2 rounded-full hover:bg-orange-700 transition">
                  Buy CPU
              </button>
          </div>
      </div>
  </div>
</main>

<script>
function store() {
  return {
      ram: 1,
      disk: 1,
      cpu: 1,
      incrementRAM() { this.ram++ },
      decrementRAM() { if (this.ram > 1) this.ram-- },
      incrementDisk() { this.disk++ },
      decrementDisk() { if (this.disk > 1) this.disk-- },
      incrementCPU() { this.cpu++ },
      decrementCPU() { if (this.cpu > 1) this.cpu-- },
      buyRAM() {
          if (this.ram > 0) {
              window.location.href = `/buyresource?resource=ram&amount=${this.ram}`;
          }
      },
      buyDisk() {
          if (this.disk > 0) {
              window.location.href = `/buyresource?resource=disk&amount=${this.disk * 1}`;
          }
      },
      buyCPU() {
          if (this.cpu > 0) {
              window.location.href = `/buyresource?resource=cpu&amount=${this.cpu}`;
          }
      }
  }
}

      // Animated Background
      const canvas = document.getElementById("animated-bg");
      const ctx = canvas.getContext("2d");
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
      let particles = [];
      
      class Particle {
        constructor(x, y, size, speedX, speedY) {
          this.x = x;
          this.y = y;
          this.size = size;
          this.speedX = speedX;
          this.speedY = speedY;
        }
        update() {
          this.x += this.speedX;
          this.y += this.speedY;
          if (this.x > canvas.width || this.x < 0) this.speedX *= -1;
          if (this.y > canvas.height || this.y < 0) this.speedY *= -1;
        }
        draw() {
          ctx.fillStyle = "rgba(255, 255, 255, 0.3)";
          ctx.beginPath();
          ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
          ctx.fill();
        }
      }
      
      function initParticles() {
        for (let i = 0; i < 50; i++) {
          let size = Math.random() * 3 + 1;
          let x = Math.random() * canvas.width;
          let y = Math.random() * canvas.height;
          let speedX = (Math.random() - 0.5) * 2;
          let speedY = (Math.random() - 0.5) * 2;
          particles.push(new Particle(x, y, size, speedX, speedY));
        }
      }
      
      function animateParticles() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        particles.forEach(p => {
          p.update();
          p.draw();
        });
        requestAnimationFrame(animateParticles);
      }
      
      initParticles();
      animateParticles();
    </script>
    
    <%- include('./components/footer') %>
  </div>
</body>
